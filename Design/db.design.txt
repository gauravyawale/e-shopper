1. Users Collection
Fields:
_id: Unique identifier for the user.
name: Full name of the user.
email: Email of the user (used for login).
password: Encrypted password for the user.
role: Indicates if the user is a customer or admin.
addresses: Array of addresses (linked to an Address collection if normalized).
orderHistory: Array of references to orders.
cart: Reference to the user’s active cart (linked to a Cart collection).
createdAt, updatedAt: Timestamps.

2. Items (Clothes) Collection
Fields:
_id: Unique identifier for the item.
name: Name of the item.
description: Detailed description of the item.
category: Clothing category (e.g., men, women, kids).
price: Price of the item.
size: Array of available sizes (e.g., S, M, L).
color: Array of available colors.
stock: Quantity available in stock.
images: Array of image URLs.
reviews: Array of review references (linked to Review collection).
createdAt, updatedAt: Timestamps.
3. Placed Orders Collection
Fields:
_id: Unique identifier for the order.
user: Reference to the user who placed the order.
items: Array of references to items (with quantity and price at the time of order).
totalAmount: The total amount of the order.
status: Status of the order (e.g., placed, shipped, delivered, cancelled).
paymentMethod: Payment details (linked to Payment collection).
deliveryAddress: Reference to the delivery address (can be embedded or linked to Address collection).
createdAt, updatedAt: Timestamps.
4. Review Items Collection
Fields:
_id: Unique identifier for the review.
user: Reference to the user who wrote the review.
item: Reference to the reviewed item.
rating: Rating given to the item.
comment: The user’s review.
createdAt, updatedAt: Timestamps.
5. Cart Items Collection
Fields:
_id: Unique identifier for the cart.
user: Reference to the user (one cart per user).
items: Array of item references (with quantity).
totalAmount: The total price of all the items in the cart.
createdAt, updatedAt: Timestamps.
6. Address Collection (optional if you want to normalize data)
Fields:
_id: Unique identifier for the address.
user: Reference to the user who owns the address.
fullName: Name of the person for the address.
street: Street address.
city: City.
state: State/Province.
postalCode: Postal code.
country: Country.
phoneNumber: Contact number.
createdAt, updatedAt: Timestamps.
7. Payment Collection
Fields:
_id: Unique identifier for the payment.
order: Reference to the related order.
paymentMethod: e.g., Credit card, PayPal.
paymentStatus: Status of payment (e.g., paid, pending, failed).
transactionId: Unique transaction ID.
createdAt, updatedAt: Timestamps.

Relationships Between Collections:
User ↔ Orders: One user can have many orders, one order belongs to one user.
User ↔ Cart: One user has one cart, and a cart contains multiple items.
User ↔ Review: One user can leave multiple reviews for different items.
Order ↔ Items: One order contains many items.
Item ↔ Review: One item can have many reviews.
Considerations:
Indexes: Add indexes to fields like userId, orderId, and itemId to speed up querying.
Security: Hash passwords, protect sensitive data, and ensure only authorized users can access or modify certain data.
Data consistency: Make sure to handle stock counts correctly to avoid overselling.
Payment gateway: If integrating with a payment provider, consider APIs for payment processing (like Stripe or PayPal).



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


1. Admin User Collection
Fields:
_id: Unique identifier for the admin.
name: Admin's full name.
email: Admin's email (used for login).
password: Encrypted password for the admin.
role: Set to "admin" to differentiate from regular users.
permissions: Array of specific permissions (e.g., manage users, manage orders, etc.).
createdAt, updatedAt: Timestamps.